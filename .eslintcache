[{"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/index.js":"1","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/App.js":"2","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/reportWebVitals.js":"3","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Homepage.jsx":"4","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/General/Header.jsx":"5","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/People.jsx":"6","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Groups.jsx":"7","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Initiatives.jsx":"8","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/ShareFiles.jsx":"9","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Support.jsx":"10","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Homepage/PhotoGallery.jsx":"11","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Groups/GroupItem.jsx":"12","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Events.jsx":"13","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/reducers/reducer.js":"14","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Groups/AddGroupModal.jsx":"15","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/actions/actions.js":"16","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Events/EventItem.jsx":"17","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Events/AddEventModal.jsx":"18","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/AboutMe.jsx":"19","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Mentoring/RegisterModal.jsx":"20"},{"size":500,"mtime":1608114946611,"results":"21","hashOfConfig":"22"},{"size":1410,"mtime":1608195854048,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1608114946612,"results":"24","hashOfConfig":"22"},{"size":3706,"mtime":1608200594080,"results":"25","hashOfConfig":"22"},{"size":1972,"mtime":1608198270125,"results":"26","hashOfConfig":"22"},{"size":2534,"mtime":1608209274496,"results":"27","hashOfConfig":"22"},{"size":3888,"mtime":1608204989952,"results":"28","hashOfConfig":"22"},{"size":3984,"mtime":1608212091282,"results":"29","hashOfConfig":"22"},{"size":2290,"mtime":1608206076103,"results":"30","hashOfConfig":"22"},{"size":3913,"mtime":1608138329300,"results":"31","hashOfConfig":"22"},{"size":1993,"mtime":1608204561154,"results":"32","hashOfConfig":"22"},{"size":1123,"mtime":1608130295017,"results":"33","hashOfConfig":"22"},{"size":3234,"mtime":1608203751166,"results":"34","hashOfConfig":"22"},{"size":1838,"mtime":1608208254268,"results":"35","hashOfConfig":"22"},{"size":1668,"mtime":1608211994501,"results":"36","hashOfConfig":"22"},{"size":277,"mtime":1608203201739,"results":"37","hashOfConfig":"22"},{"size":1482,"mtime":1608204436218,"results":"38","hashOfConfig":"22"},{"size":3276,"mtime":1608204131116,"results":"39","hashOfConfig":"22"},{"size":2420,"mtime":1608198680631,"results":"40","hashOfConfig":"22"},{"size":1201,"mtime":1608201805052,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"g719os",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/index.js",[],["88","89"],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/App.js",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/reportWebVitals.js",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Homepage.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/General/Header.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/People.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Groups.jsx",["90"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components'\n\n\nimport Header from '../components/General/Header';\nimport GroupItem from '../components/Groups/GroupItem';\nimport AddGroupModal from '../components/Groups/AddGroupModal';\n\nimport {searchGroup } from '../actions/actions';\n\nconst ButtonsWrapper = styled.div`\n    display: flex;\n    height: 100px;\n    align-items: center;\n    justify-content: space-between;\n    margin: 75px 0 25px;\n    width: 100%;\n`\nconst SearchWrapper = styled.div`\n    margin-left: 150px;\n    display: flex;\n    align-items: center;\n\n    & input {\n        height: 35px;\n        font-size: 16px;\n        margin-right: 25px;\n        border-radius: 10px;\n        outline: none;\n    }\n `\n\n const AddWrapper = styled.div`\n    margin-right: 150px;\n `\n\n const GroupItemsWrapper = styled.div`\n    margin-top: 50px;\n `\n\nconst Groups = () => {\n    const [modalActive, setModalActive] = useState(false);\n    const [searchFilter, setSearchFilter] = useState('')\n    \n    const modalHandler = () => setModalActive(!modalActive);\n\n\n\n    const groupItemArray = useSelector(state => state.groups);\n    const filter = useSelector(state=> state.filter);\n    const dispatch = useDispatch();\n\n    const searchGroups = () => {\n        console.log(filter);\n        dispatch(searchGroup(searchFilter));\n    }\n\n\n    return (\n        <div>\n            <div>\n                <AddGroupModal modalActive={modalActive} modalHandler={modalHandler}/>\n            </div>\n            <Header />\n            <div className=\"page-container\">\n                <div className=\"page-title\"> Nationwide Groups </div>\n                <div className=\"page-subtitle\"> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent dignissim convallis metus, egestas volutpat nunc pharetra vitae. Curabitur bibendum neque nunc, non porta nibh suscipit eget. Curabitur at velit blandit diam facilisis interdum. Morbi convallis augue sit amet sem facilisis condimentum. Nulla quis tristique mauris. Aenean interdum mollis quam, at hendrerit lorem posuere sit amet. Nulla augue felis, dapibus vitae porta sed, tristique vitae tortor. In tempor consequat sapien at finibus. Aenean gravida condimentum dui quis fringilla. Morbi facilisis ipsum sed ullamcorper pellentesque. Suspendisse in mi imperdiet, laoreet odio vel, tincidunt diam. </div>\n                <ButtonsWrapper>\n                <SearchWrapper>\n                    <input type='text' placeholder='Search groups...' onChange={event => setSearchFilter(event.target.value)} />    \n                    <button className='primary-button' onClick={searchGroups}> Search </button> \n                </SearchWrapper>\n                <AddWrapper>\n                    <button className='primary-button' onClick={modalHandler}> Create Group </button>\n                </AddWrapper>  \n                </ButtonsWrapper>\n                <div className=\"page-title\"> Search Results </div>\n                <GroupItemsWrapper>\n                    {groupItemArray.map((item => {\n                            if (filter === '') {\n                                return (\n                                    <GroupItem imgLink={item.image} title={item.title} description={item.description} />\n                                )\n                            }\n                            else if (filter !== '' && item.title === filter) {\n                                    return (\n                                    <GroupItem imgLink={item.image} title={item.title} description={item.description} />\n                                    )\n                            } \n                            \n                            \n                        \n                    }))}\n                </GroupItemsWrapper>\n            </div>    \n        </div>\n    )\n};\n\nexport default Groups;","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Initiatives.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/ShareFiles.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Support.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Homepage/PhotoGallery.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Groups/GroupItem.jsx",["91"],"import React from 'react';\nimport styled from 'styled-components';\nimport TalkClub from '../../images/talkClub.png';\n\nconst GroupIcon = styled.img`\n    height: 75px;\n    width: 75px;\n    border-radius: 100%;\n    border: 2px white solid;\n`\n\nconst GroupTitle = styled.div`\nfont-family: 'Josefin Sans', sans-serif;\nfont-size: 22px;\ncolor: #2eadb6;\n`\n\nconst GroupDesc = styled.div`\nfont-family: 'Josefin Sans', sans-serif;\nfont-size: 14px;\ncolor: #2eadb6;\n`\n\nconst GroupItemHeader = styled.div`\n    display: flex; \n    align-items: center;\n    margin-bottom: 15px;\n`\n\nconst GroupItemWrapper = styled.div`\n    width: 750px;\n    word-wrap: break-word;\n    cursor: pointer;\n    border: 1px #2eadb6 solid;\n    border-radius: 10px;\n    padding: 25px;\n    margin: 15px 0;\n`\n\nconst GroupItem = (props) => {\n    return (\n        <GroupItemWrapper>\n            <GroupItemHeader>\n                <GroupIcon src={props.imgLink}/>\n                <GroupTitle> {props.title} </GroupTitle>\n            </GroupItemHeader>\n            <GroupDesc>  {props.description} </GroupDesc>\n        </GroupItemWrapper>\n    )\n}\n\nexport default GroupItem;","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/Events.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/reducers/reducer.js",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Groups/AddGroupModal.jsx",["92"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addGroup } from '../../actions/actions';\nimport NWLogo from '../../images/NWLogoSmall.png'\n\nconst EditModal = ( {modalActive, modalHandler }) => {\n\n    \n    const dispatch = useDispatch();\n    const [groupName, setGroupName] = useState('');\n    const [groupDesc, setGroupDesc] = useState('');\n    const [people, setPeople] = useState([]);\n\n    const submitHandler = (e) => {\n        console.log(groupName)\n        e.preventDefault();\n        const newGroup = \n        {\n            image: NWLogo,\n            title: groupName,\n            description: groupDesc,\n        }\n\n        dispatch(addGroup(newGroup));\n        modalHandler();\n    }\n\n    return (\n            modalActive && \n            <div>\n                <div className='modal-overlay'> \n                </div>\n                <form className = 'add-group-modal' onSubmit = {submitHandler}> \n                    <span className = 'close-modal' onClick={modalHandler}> &#10006; </span>    \n                    <div> Group Name: <input type = 'text' id='groupName' onChange={event => setGroupName(event.target.value)}/> </div>\n                    <div> Group Description: <textarea type = 'text' id='groupDesc' onChange={event => setGroupDesc(event.target.value)}/> </div>                 \n                    <div> Add People: <input type = 'text' id='people' onChange={event => setPeople(event.target.value)}/> </div>                 \n                    <input className='add-group' type = 'submit' value = 'Submit' />               \n                </form>\n            </div>\n    )\n}\n\nexport default EditModal;","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/actions/actions.js",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Events/EventItem.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Events/AddEventModal.jsx",["93"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addEvent } from '../../actions/actions';\nimport NWLogo from '../../images/NWLogoSmall.png';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\n\nconst SelectWrapper = styled(Select)`\n`\nconst EditModal = ( {modalActive, modalHandler }) => {\n\n\n    \n    const dispatch = useDispatch();\n    const [date, setDate] = useState('');\n    const [title, setTitle] = useState('');\n    const [location, setLocation] = useState('');\n    const [attendees, setAttendees] = useState('');\n    const [description, setDescription] = useState([]);\n\n    const options = [\n        { value: 'name', label: 'Bunmi Ogunbiyi' },\n        { value: 'name', label: 'Ali Tariq' },\n        { value: 'name', label: 'Nish Lingam' },\n        { value: 'name', label: 'Jackie Tinson' },\n        { value: 'name', label: 'Abdurahman Ali' },\n        { value: 'name', label: 'Oliver Bird' },\n        { value: 'name', label: 'Dan Morris' },\n        { value: 'name', label: 'Sakeena Ali' },\n        { value: 'name', label: 'Gul Ali' },\n        { value: 'name', label: 'Sajjad Ali' },\n        { value: 'name', label: 'Anthony Porter' },\n        { value: 'name', label: 'Jack Canning' },\n        { value: 'name', label: 'Augusto Rainaldi' },\n        { value: 'name', label: 'Nadia Shaik' },\n        { value: 'name', label: 'Mark Bates' },\n        { value: 'name', label: 'David Miles' },\n        { value: 'name', label: 'Jaye Peacey' },\n        ];\n\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const newEvent = \n        {\n            date,\n            title,\n            location,\n            attendees,\n            description,\n        }\n\n        dispatch(addEvent(newEvent));\n        modalHandler();\n    }\n\n    return (\n            modalActive && \n            <div>\n                <div className='modal-overlay'> \n                </div>\n                <form className = 'edit-modal' onSubmit = {submitHandler}> \n                    <img src={NWLogo} alt='NWLogo' className='modal-logo' />\n                    <span className = 'close-modal' onClick={modalHandler}> &#10006; </span>    \n                    <div>\n                        <div className='add-event-modal-content'> Date: <input type = 'text' id='date' onChange={event => setDate(event.target.value)}/> </div>\n                        <div className='add-event-modal-content'> Title: <input type = 'text' id='title' onChange={event => setTitle(event.target.value)}/> </div>                 \n                        <div className='add-event-modal-content'> Location: <input type = 'text' id='location' onChange={event => setLocation(event.target.value)}/> </div>      \n                        <div className='add-event-modal-content'> Attendees: <SelectWrapper options={options} placeholder=''/> </div>\n                        <div className='add-event-modal-content'> Description: <textarea type = 'text' id='description' onChange={event => setDescription(event.target.value)}/> </div> \n                    </div>                    \n                    <input className='add-group' type = 'submit' value = 'Submit' />               \n                </form>\n            </div>\n    )\n}\n\nexport default EditModal;","/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/pages/AboutMe.jsx",[],"/Users/Nish.Gnanalingam/Documents/NW/Hackfest/nationwide-connect/src/components/Mentoring/RegisterModal.jsx",[],["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":80,"column":47,"nodeType":"102","messageId":"103","endLine":80,"endColumn":49},{"ruleId":"104","severity":1,"message":"105","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":16},{"ruleId":"104","severity":1,"message":"108","line":12,"column":12,"nodeType":"106","messageId":"107","endLine":12,"endColumn":18},{"ruleId":"104","severity":1,"message":"109","line":19,"column":23,"nodeType":"106","messageId":"107","endLine":19,"endColumn":35},{"ruleId":"96","replacedBy":"110"},{"ruleId":"98","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'TalkClub' is defined but never used.","Identifier","unusedVar","'people' is assigned a value but never used.","'setAttendees' is assigned a value but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation"]